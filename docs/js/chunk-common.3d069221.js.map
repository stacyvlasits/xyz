{"version":3,"sources":["webpack:///./js/bounds/BoundsForm.vue","webpack:///./js/bounds/BoundsForm.vue?1ffb","webpack:///./js/coords/CoordsForm.vue","webpack:///./js/coords/CoordsForm.vue?e418","webpack:///./js/bounds/BoundsForm.vue?10a9","webpack:///./js/coords/CoordsForm.vue?0253","webpack:///./js/permalink.js","webpack:///./js/coords/coords.js"],"names":["class","coordinate","min","onMin","max","onMax","props","Object","components","CoordsForm","bounds","wgs","lat","lon","lv95","N","E","methods","ev","this","$emit","console","log","emits","render","__scopeId","style","value","name","onSelect","$event","target","dms","deg","type","step","size","sec","show","nMin","Number","MIN_VALUE","nMax","MAX_VALUE","eMin","eMax","coord","latMin","latMax","lonMin","lonMax","watch","setLatLon","deep","c","lv","changeEvent","$root","parseFloat","hash","location","min_lat","min_lon","max_lat","max_lon","link","stringified","π","Math","PI","τ","sqrt","sin","exp","cos","DEGREE","tan","asin","atan","MINUTE","SECOND","dms2deg","deg2rad","deg2dms","degIn","floor","minIn","wgs2lv95","latt","lngg","latArc","lngArc","lng","lat2","lat3","lng2","lng3","toFixed","lv952wgs","Ep","Np","xp","yp","xp2","xp3","yp2","yp3","λp","φp","λ","φ","Ellipsoid","semiMajor","semiMinor","φ0","λ0","flatteningInverse","E2","R","radiusOfProjectionSphere","α","sin2","cos4","θ","s","BesselEllipsoid","super"],"mappings":"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","file":"js/chunk-common.3d069221.js","sourcesContent":["<template>\n  <div class=\"bounds-forms\">\n    <h3>Min Coordindate</h3>\n    <coords-form :coordinate=\"min\" @coord-changed=\"onMin\"></coords-form>\n    <h3>Max Coordindate</h3>\n    <coords-form :coordinate=\"max\" @coord-changed=\"onMax\"></coords-form>\n  </div>\n</template>\n<script>\nimport CoordsForm from '../coords/CoordsForm.vue';\n\n\nexport default {\n  props: {\n    min: Object,\n    max: Object\n  },\n  components: {\n    'coords-form': CoordsForm\n  },\n  data() {\n    return {\n      bounds: {\n        min: {\n          wgs: {\n            lat: null,\n            lon: null\n          },\n          lv95: {\n            N: null,\n            E: null\n          }\n        },\n        max: {\n          wgs: {\n            lat: null,\n            lon: null\n          },\n          lv95: {\n            N: null,\n            E: null\n          }\n        },\n      }\n    }\n  },\n  methods: {\n    onMin(ev) {\n      if (this.bounds.max.wgs.lat == null) {\n        this.bounds.max.wgs.lat = this.max.lat;\n        this.bounds.max.wgs.lon = this.max.lon;\n        this.bounds.max.lv95.N = this.max.N;\n        this.bounds.max.lv95.E = this.max.E;\n      }\n      this.bounds.min.wgs.lat = ev.wgs.lat;\n      this.bounds.min.wgs.lon = ev.wgs.lon;\n      this.bounds.min.lv95.N = ev.lv95.N;\n      this.bounds.min.lv95.E = ev.lv95.E;\n      //console.log(`BoundsForm#onMin: ${this.bounds.min.wgs.lat}`, this.bounds);\n      this.$emit('bounds-changed', this.bounds);\n    },\n    onMax(ev) {\n      if (this.bounds.min.wgs.lat == null) {\n        this.bounds.min.wgs.lat = this.min.lat;\n        this.bounds.min.wgs.lon = this.min.lon;\n        this.bounds.min.lv95.N = this.min.N;\n        this.bounds.min.lv95.E = this.min.E;\n      }\n      this.bounds.max.wgs.lat = ev.wgs.lat;\n      this.bounds.max.wgs.lon = ev.wgs.lon;\n      this.bounds.max.lv95.N = ev.lv95.N;\n      this.bounds.max.lv95.E = ev.lv95.E;\n      console.log('BoundsForm#onMax: sending message', this.bounds);\n      this.$emit('bounds-changed', this.bounds);\n    },\n  },\n  emits: ['bounds-changed'],\n};\n</script>\n<style scoped>\n.bounds-forms input {\n  margin: 5px;\n  padding: 5px;\n}\n\n\n.two-digit {\n  width: 30pt;\n}\n\n\n.five-digit {\n  width: 75pt;\n}\n\n\n.ten-digit {\n  width: 150pt;\n}\n\n\n.bounds-forms span {\n    margin-right: 27px;\n    padding-left: 3px;\n}\n\n\n.coord-form {\n  margin-top: 15px;\n}\n</style>\n","import { render } from \"./BoundsForm.vue?vue&type=template&id=eeae938e&scoped=true\"\nimport script from \"./BoundsForm.vue?vue&type=script&lang=js\"\nexport * from \"./BoundsForm.vue?vue&type=script&lang=js\"\n\nimport \"./BoundsForm.vue?vue&type=style&index=0&id=eeae938e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-eeae938e\"\n\nexport default script","<template>\n  <div class=\"coords-forms\">\n    <span style=\"width: 50pt\">System:</span>\n    <select name=\"input_format\" v-on:change=\"onSelect($event.target.value)\">\n      <option value=\"dms\">Deg°/Min'/Sec\"</option>\n      <option value=\"deg\">Deg°</option>\n      <option value=\"lv95\">LV95</option>\n    </select>\n    <form name=\"coords_dms\" v-show=\"dms.show\" class=\"coord-form\">\n      <table>\n        <tr>\n          <td>Latitude:</td>\n          <td>\n            <input v-model=\"dms.lat.deg\" type=\"number\" step=\"any\" class=\"two-digit\">°\n            <input v-model=\"dms.lat.min\" type=\"number\" step=\"any\" size=\"3\" class=\"two-digit\">'\n            <input v-model=\"dms.lat.sec\" type=\"number\" step=\"0.05\" size=\"5\" class=\"five-digit\">\"\n          </td>\n        </tr>\n        <tr>\n          <td>Longitude:</td>\n          <td>\n            <input v-model=\"dms.lon.deg\" type=\"number\" step=\"any\" class=\"two-digit\">°\n            <input v-model=\"dms.lon.min\" type=\"number\" step=\"any\" class=\"two-digit\">'\n            <input v-model=\"dms.lon.sec\" type=\"number\" step=\"0.05\" class=\"five-digit\">\"\n          </td>\n        </tr>\n      </table>\n    </form>\n    <form name=\"coords_degrees\" v-show=\"deg.show\" class=\"coord-form\">\n      <table>\n        <tr>\n          <td>Latitude:</td>\n          <td>\n            <input v-model=\"deg.lat\" type=\"number\" step=\"any\" class=\"ten-digit\">° N\n          </td>\n        </tr>\n        <tr>\n          <td>Longitude:</td>\n          <td>\n            <input v-model=\"deg.lon\" type=\"number\" step=\"any\" class=\"ten-digit\">° E\n          </td>\n        </tr>\n      </table>\n    </form>\n    <form name=\"coords_lv95\" v-show=\"lv95.show\" class=\"coord-form\">\n      <table>\n        <tr>\n          <td>Latitude:</td>\n          <td><input v-model=\"lv95.N\" type=\"number\" step=\"any\" class=\"ten-digit\"> meters North</td>\n        </tr>\n        <tr>\n          <td>Longitude:</td>\n          <td><input v-model=\"lv95.E\" type=\"number\" step=\"any\" class=\"ten-digit\"> meters East</td>\n        </tr>\n      </table>\n    </form>\n  </div>\n</template>\n<script>\nimport {dms2deg, wgs2lv95, lv952wgs, deg2dms} from './coords.js';\n\nexport default {\n  props: {\n    coordinate: Object\n  },\n  data() {\n    const [N, E] = wgs2lv95(this.coordinate.lat, this.coordinate.lon);\n    return {\n      dms: {\n        show: true,\n        lat: deg2dms(this.coordinate.lat),\n        lon: deg2dms(this.coordinate.lon)\n      },\n      deg: {\n        show: false,\n        lat: this.coordinate.lat,\n        lon: this.coordinate.lon\n      },\n      lv95: {\n        show: false,\n        N: N,\n        E: E,\n        nMin: Number.MIN_VALUE,\n        nMax: Number.MAX_VALUE,\n        eMin: Number.MIN_VALUE,\n        eMax: Number.MAX_VALUE,\n      },\n      coord: {\n        lat: this.coordinate.lat,\n        lon: this.coordinate.lon,\n        latMin: Number.MIN_VALUE,\n        latMax: Number.MAX_VALUE,\n        lonMin: Number.MIN_VALUE,\n        lonMax: Number.MAX_VALUE\n      }\n    }\n  },\n  methods: {\n    setLatLon(lat, lon) {\n      this.deg.lat = lat;\n      this.deg.lon = lon;\n      this.dms.lat = deg2dms(lat);\n      this.dms.lon = deg2dms(lon);\n    },\n    setLv95(N, E) {\n      this.lv95.N = N;\n      this.lv95.E = E;\n    },\n    onSelect(value) {\n      this.dms.show = false;\n      this.deg.show = false;\n      this.lv95.show = false;\n      const lat = this.coord.lat, lon = this.coord.lon;\n      switch(value) {\n      case 'dms':\n        this.dms.lat = deg2dms(lat);\n        this.dms.lon = deg2dms(lon);\n        break;\n      case 'deg': [this.deg.lat, this.deg.lon] = [lat, lon]; break;\n      case 'lv95': [this.lv95.N, this.lv95.E] = wgs2lv95(lat, lon); break;\n      }\n      this[value].show = true;\n    }\n  },\n  emits: ['coord-changed'],\n  watch: {\n    coordinate: {\n      handler() {\n        //console.log('CoordsForm#coordiate handler: ', this.coordinate);\n        this.setLatLon(this.coordinate.lat, this.coordinate.lon);\n      },\n      deep: true\n    },\n    coord: {\n      handler() {\n        const c = this.coord;\n        const lv = wgs2lv95(c.lat, c.lon);\n        const changeEvent = {wgs:{lat: c.lat, lon: c.lon}, lv95:{N:lv[0], E:lv[1]}};\n        //console.log('CoordsForm: coord changed: ', changeEvent);\n        this.$root.$emit('coord-changed', changeEvent);\n        this.$emit('coord-changed', changeEvent);\n      },\n      deep: true\n    },\n    dms: {\n      handler() {\n        const dms = this.dms;\n        this.coord.lat = dms2deg(parseFloat(dms.lat.deg), parseFloat(dms.lat.min), parseFloat(dms.lat.sec));\n        this.coord.lon = dms2deg(parseFloat(dms.lon.deg), parseFloat(dms.lon.min), parseFloat(dms.lon.sec));\n      },\n      deep: true\n    },\n    deg: {\n      handler() {\n        this.coord.lat = dms2deg(parseFloat(this.deg.lat));\n        this.coord.lon = dms2deg(parseFloat(this.deg.lon));\n      },\n      deep: true\n    },\n    lv95: {\n      handler() {\n        [this.coord.lat, this.coord.lon] = lv952wgs(parseFloat(this.lv95.N), parseFloat(this.lv95.E));\n      },\n      deep: true\n    },\n  }\n};\n</script>\n<style scoped>\n.coords-forms input {\n  margin: 5px;\n  padding: 5px;\n}\n\n\n.two-digit {\n  width: 30pt;\n}\n\n\n.five-digit {\n  width: 75pt;\n}\n\n\n.ten-digit {\n  width: 150pt;\n}\n\n\n.coords-forms span {\n    margin-right: 27px;\n    padding-left: 3px;\n}\n\n\n.coord-form {\n  margin-top: 15px;\n}\n</style>\n","import { render } from \"./CoordsForm.vue?vue&type=template&id=8eda959e&scoped=true\"\nimport script from \"./CoordsForm.vue?vue&type=script&lang=js\"\nexport * from \"./CoordsForm.vue?vue&type=script&lang=js\"\n\nimport \"./CoordsForm.vue?vue&type=style&index=0&id=8eda959e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-8eda959e\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BoundsForm.vue?vue&type=style&index=0&id=eeae938e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CoordsForm.vue?vue&type=style&index=0&id=8eda959e&scoped=true&lang=css\"","import * as queryString from 'query-string';\n\n\nconst hash = queryString.parse(location.hash);\nlet lat = 0, lon = 0, min_lat = 0, min_lon = 0, max_lat = 0, max_lon = 0;\nif (hash) {\n  lat = parseFloat(hash.lat) || 0;\n  lon = parseFloat(hash.lon) || 0;\n  min_lat = parseFloat(hash.min_lat) || lat;\n  max_lat = parseFloat(hash.max_lat) || lat;\n  min_lon = parseFloat(hash.min_lon) || lon;\n  max_lon = parseFloat(hash.max_lon) || lon;\n  console.log(`permalink.js: lat: ${lat}, lon: ${lon}, min_lat: ${min_lat}, min_lon: ${min_lon}, max_lat: ${max_lat}, max_lon: ${min_lon}`);\n}\n\nconst link = {\n  lat: lat,\n  lon: lon,\n  min_lat: min_lat,\n  max_lat: max_lat,\n  min_lon: min_lon,\n  max_lon: max_lon,\n};\n\nif (location.hash == '') {\n  const stringified = queryString.stringify(link);\n  console.log('stringified: ', stringified);\n  location.hash = stringified;\n}\n\nexport default link;\n","// Ported from:\n//\n// Implementation of Formulas and constants for the calculation of the\n// Swiss conformal cylindrical projection and for the transformation\n// between coordinate systems. December 2016.  For download at:\n//\n// https://www.swisstopo.admin.ch/content/swisstopo-internet/en/topics/survey/reference-systems/switzerland/_jcr_content/contentPar/tabs/items/dokumente_publikatio/tabPar/downloadlist/downloadItems/517_1459343190376.download/refsys_e.pdf\n\nconst π = Math.PI, τ = 2 * π;\nconst sqrt = Math.sqrt, exp = Math.exp, ln = Math.log,\n  sin = Math.sin, cos = Math.cos, tan = Math.tan,\n  asin = Math.asin, atan = Math.atan;\n\n\nconst DEGREE = 1 / 360;\nconst MINUTE = 1 / 360 / 60;\nconst SECOND = 1 / 360 / 3600;\n\nexport function dms2deg(deg, min = 0, sec = 0) {\n  return deg + min / 60 + sec / 3600;\n}\n\n\nexport function deg2rad(deg, min = 0, sec = 0) {\n  return τ * (deg * DEGREE + min * MINUTE + sec * SECOND);\n}\n\n\nexport function deg2sec(deg, min = 0, sec = 0) {\n  return 3600 * deg + 60 * min + sec;\n}\n\n\nexport function deg2dms(degIn) {\n  const deg = Math.floor(degIn);\n  const minIn = ((degIn % 1) * 60);\n  const min = Math.floor(minIn);\n  const sec = ((minIn % 1) * 60);\n  return {deg: deg, min: min, sec: sec};\n}\n\n\n/**\n * 4.1 Approximate formulas for the transformation between Swiss\n * projection coordinates and WGS84.\n * @return [N, E]\n */\nexport function wgs2lv95(latt, lngg) {\n  const latArc = latt * 3600;\n  const lngArc = lngg * 3600;\n  const lat = (latArc - 169028.66) / 10000; // φ'\n  const lng = (lngArc - 26782.5) / 10000; // λ'\n\n  const lat2 = lat * lat, lat3 = lat2 * lat;\n  const lng2 = lng * lng, lng3 = lng2 * lng;\n\n  const E = 2600072.37\n    + 211455.93 * lng\n    - 10938.51 * lng * lat\n    - 0.36 * lng * lat2\n    - 44.54 * lng3;\n\n  const N = 1200147.07\n    + 308807.95 * lat\n    + 3745.25 * lng2\n    + 76.63 * lat2\n    - 194.56 * lng2 * lat\n    + 119.79 * lat3;\n\n  // TODO: why the fixup for roundtrip?\n  return [parseFloat(N.toFixed(2)) - 0.02, parseFloat(E.toFixed(2)) + 0.02];\n}\n\n\n/**\n * 4.2 Approximate formulas for the direct transformation of Swiss\n * projection coordinates to ellipsoidal WGS84 coordinates.\n * @return [lat, lng]\n */\nexport function lv952wgs(N, E) {\n  const Ep = (E - 2600000) / 1000000;\n  const Np = (N - 1200000) / 1000000;\n  const xp = Np, yp = Ep,\n    xp2 = xp * xp, xp3 = xp2 * xp,\n    yp2 = yp * yp, yp3 = yp2 * yp;\n  const λp = 2.6779094\n    + 4.728982 * yp\n    + 0.791484 * yp * xp\n    + 0.1306 * yp * xp2\n    - 0.0436 * yp3;\n  const φp = 16.9023892\n    + 3.238272 * xp\n    - 0.270978 * yp2\n    - 0.002528 * xp2\n    - 0.0447 * yp2 * xp\n    - 0.0140 * xp3;\n  const λ = λp * 100 / 36;\n  const φ = φp * 100 / 36;\n  return [φ, λ];\n}\n\n\n// https://www.movable-type.co.uk/scripts/latlong.html\n// MIT License\n// NB: https://www.movable-type.co.uk/scripts/latlong-vincenty.html\nexport function distanceHaversine(lat1, lon1, lat2, lon2) {\n  // TODO: replace with computed value from reference ellipsoid.\n  const R = 6371e3; // metres\n  const toRad = π / 180;\n  const φ1 = lat1 * toRad; // φ, λ in radians\n  const φ2 = lat2 * toRad;\n  const Δφ = (lat2 - lat1) * toRad;\n  const Δλ = (lon2 - lon1) * toRad;\n  const a = sin(Δφ / 2) * sin(Δφ / 2) +\n    cos(φ1) * cos(φ2) *\n    sin(Δλ / 2) * sin(Δλ / 2);\n  const c = 2 * Math.atan2(sqrt(a), sqrt(1 - a));\n  const d = R * c; // in metres\n  return d;\n}\n\n\nexport class Ellipsoid {\n  /**\n   * @param φ0 ellipsoidal latitude of the projection centre\n   * @param λ0 ellipsoidal longitude of the projection centre\n   */\n  constructor(semiMajor, semiMinor, φ0, λ0) {\n    this.semiMajor = semiMajor;\n    this.semiMinor = semiMinor;\n    this.flatteningInverse = this.semiMajor / (this.semiMajor - this.semiMinor);\n    const a2 = this.semiMajor * this.semiMajor;\n    const b2 = this.semiMinor * this.semiMinor;\n    // 1st numerical eccentricity (squared) of the Bessel ellipsoid (*).\n    //this.E2 = (a2 - b2) / a2;\n    this.E2 = 0.006674372230614;\n    // Only E is directly used in the calculations below.\n    this.E = sqrt(this.E2);\n    this.φ0 = φ0;\n    this.λ0 = λ0;\n    this.R = this.radiusOfProjectionSphere();\n    // Relat. between longitude on sphere and on ellipsoid.\n    //this.α = this.computeα();\n    this.α = 1.00072913843038;\n  }\n\n\n  /**\n   * Helper to compute radius of the projection sphere; meters.\n   * @private\n   */\n  radiusOfProjectionSphere() {\n    return this.semiMajor * sqrt(1 - this.E2) / (1 - this.E2 * this.sin2(this.φ0));\n  }\n\n\n  /**\n   * Helper to compute relationship between longitude on sphere and on\n   * ellipsoid.\n   * @private\n   */\n  computeα() {\n    return sqrt(1 + this.E2 / (1 - this.E2) * this.cos4(this.φ0));\n  }\n\n\n  // @private\n  sin2(θ) {\n    const s = sin(θ);\n    return s * s;\n  }\n\n\n  cos4(θ) {\n    const s = cos(θ);\n    return s * s * s * s;\n  }\n}\n\n\nexport class BesselEllipsoid extends Ellipsoid {\n  /**\n   * Bessel ellipsoid with a projection center.\n   * @param φ0 ellipsoidal latitude of the projection centre\n   * @param λ0 ellipsoidal longitude of the projection centre\n   */\n  constructor(φ0, λ0) {\n    super(6377397.155, 6356078.962822, φ0, λ0);\n  }\n}\n\n\nexport const BernBesselEllipsoid =\n    new BesselEllipsoid(deg2rad(46, 57, 8.66), deg2rad(7, 26, 22.50));\n\n\n// Latitude of the fundamental point on the sphere.\nconst b0 = deg2rad(46, 54, 27.83324844);\n\n// Constant of the latitude formula.\nconst K = 0.0030667323772751;\n\n\n/**\n * See: 3.2 Ellipsoidal coordinates (λ, φ on the Bessel ellipsoid) ⇒\n * Swiss projection coordinates (rigorous formulas)\n */\nexport function ellipsoidToLV95(φ, λ, eoid = BernBesselEllipsoid) {\n  // a) Bessel ellipsoid (φ, λ) ⇒ sphere (b, l) (Gauss projection)\n  const α = eoid.α, E = eoid.E, R = eoid.R;\n  const S = α * ln(tan(π/4 + φ/2)) - α * E / 2\n    * ln((1 + E * sin(φ)) / (1 - E * sin(φ))) + K;\n  const b = 2 * (atan(exp(S)) - π/4);\n  const l = α * (λ - eoid.λ0);\n  // b) equator system (b, l) ⇒ pseudo-equator system ( b ) (rotation)\n  const ll = atan(sin(l) / (sin(b0) * tan(b) + cos(b0)  * cos(l)));\n  const bb = asin(cos(b0) * sin(b) - sin(b0) * cos(b) * cos(l));\n  // c) sphere (b), l ⇒ projection plane (y, x) (Mercator projection)\n  const yy = R * ll;\n  const xx = R / 2 * ln((1 + sin(bb)) / (1 - sin(bb)));\n  const yyy = yy + 2600000;\n  const xxx = xx + 1200000;\n  return [yyy, xxx];\n}\n\n\n/**\n * See: 3.3 Swiss projection coordinates (y, x) ⇒ ellipsoidal coordinates\n * (λ, φ) (rigorous formulas)\n */\nexport function LV95ToEllipsoid(East, North, eoid = BernBesselEllipsoid) {\n  // a) projection plane (y, x) ⇒  sphere (b)\n  const α = eoid.α, E = eoid.E, R = eoid.R, λ0 = eoid.λ0;\n  const Y = East - 2600000;\n  const X = North - 1200000;\n  const ll = Y / R;\n  const bb = 2 * (atan(exp(X / R)) - π/4);\n  // b) pseudo-equator system (b), l ⇒ equator system (b, l)\n  const b = asin(cos(b0) * sin(bb) + sin(b0) * cos(bb) * cos(ll));\n  const l = atan(sin(ll) / (cos(b0) * cos(ll) - sin(b0) * tan(bb)));\n  // c) sphere (b, l) ⇒ Bessel ellipsoid (φ, λ)\n  const λ = λ0 + l / α;\n  let φ = b;\n  let S = 0;\n  const threshold = 0.000000000001; // TODO: this is just an arb small num.\n  for (let i = 0; i < 10; i++) {\n    const newS =  1/α * ln(tan(π/4 + b/2) - K) + E\n      * ln(tan(π/4 + asin(E * asin(φ)) / 2));\n    const newφ = 2 * atan(exp(S)) - π/2;\n    if (newS - S < threshold && newφ - φ < threshold) {\n      break;\n    }\n    S = newS;\n    φ = newφ;\n  }\n  return [λ, φ];\n}\n"],"sourceRoot":""}